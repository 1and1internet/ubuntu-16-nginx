#!/bin/bash
#  SSL Configuration.
#

#If no SSL provided then will exit and continue.
if [[ ! -e  "/ssl/ssl.key" ]] && [[ ! -e "/ssl/ssl.crt" ]]; then
   echo "Not enabling SSL as neither key nor cert provided."
   exit 0

#If key and cert are provided, check they are valid and match. 
elif [[ ! -z "/ssl/ssl.key" ]] && [[ ! -z "/ssl/ssl.crt" ]]; then

   KEYCHECK=`openssl rsa -in /ssl/ssl.key -check 2>&1 | grep --quiet "ok" ; echo $?`
   CERTCHECK=`openssl x509 -in /ssl/ssl.crt -text -noout 2>&1 | grep --quiet "CA:TRUE" ; echo $?`
   if [ "$KEYCHECK" == "1"  ]; then
        echo "Key is not valid. Configuration failed."
        exit 1
   fi
   if [ "$CERTCHECK" == "1" ]; then
        echo "Cert is not valid. Configuration failed."
        exit 1
   fi
   KEYMD5=`openssl rsa -noout -modulus -in "/ssl/ssl.key" | openssl md5 | sed 's/^.*= //'`
   CERTMD5=`openssl x509 -noout -modulus -in "/ssl/ssl.crt" | openssl md5 | sed 's/^.*= //'`
   if [ "$KEYMD5" != "$CERTMD5" ]; then
        echo "Key and Certificate don't match. Configuration failed."
        exit 1
#Passed all tests, we'll configure SSL.
   else
        echo "Enabling SSL."
        sed -i -e 's/# listen 443/listen 8443/g' /etc/nginx/sites-enabled/site.conf
        sed -i -e 's/# listen \[::\]:443/listen \[::\]:8443/g' /etc/nginx/sites-enabled/site.conf
        sed -i -e '/server_name _;/a \        ssl\_certificate\_key \/ssl\/ssl\.key\;' /etc/nginx/sites-enabled/site.conf
        sed -i -e '/server_name _;/a \        ssl\_certificate \/ssl\/ssl\.crt\;' /etc/nginx/sites-enabled/site.conf
     fi
     
#Otherwise we will fail startup.
else 
   echo "Missing either SSL key or cert. Failed to configure SSL, exiting." 
   exit 1
fi
